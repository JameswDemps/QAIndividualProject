{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js\";\nimport React from \"react\";\nimport { Table, Button } from \"react-bootstrap\"; //import { Grid, Cell } from \"styled-css-grid\";\n\nimport \"./css/GetProductList.css\";\nimport LoadTable from \"./LoadTable\";\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToBasket = id => {\n      const requestOptions = {\n        method: 'PUT'\n      };\n      fetch(\"http://localhost:9999/shop/addToBasket/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {//this.getShoppingList();\n      });\n    };\n\n    this.createItem = id => {\n      const requestOptions = {\n        method: 'POST'\n      };\n      fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {//this.getShoppingList();\n      });\n    };\n\n    this.state = {\n      shoppingList: [],\n      productList: [],\n      firstRender: true\n    };\n    const shoppingBasket = new LoadTable();\n    shoppingBasket.refreshTable = true;\n  }\n\n  async addItem(id) {\n    var itemExists = false;\n    const response = await fetch(\"http://localhost:9999/shop/showBasket\");\n    const json = await response.json();\n    this.setState({\n      shoppingList: json\n    }); //console.log(this.state.shoppingList);\n    //console.log(Object.keys(this.state.shoppingList).length);\n\n    for (var i = 0; i < Object.keys(this.state.shoppingList).length; i++) {\n      try {\n        var productId = this.state.shoppingList[i].product.id;\n\n        if (productId == id) {\n          itemExists = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (itemExists == false) {\n      this.createItem(id);\n    } else {\n      this.addToBasket(id);\n    }\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.setState({\n      productList: json\n    }); // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.state.firstRender === true) {\n      this.getProductList();\n      this.state.firstRender = false;\n    }\n\n    return (//     <div>\n      //     <Table striped bordered hover>\n      //         {/*\n      //       <thead>\n      //         <tr>\n      //           <th>Product Name</th>\n      //           <th>price</th>\n      //           <th></th>\n      //         </tr>\n      //       </thead>\n      //         */}\n      //       <tbody className=\"productRow\">\n      //         {products.map(myProducts => (\n      //             <tr key={myProducts.id} >\n      //                     <td>\n      //                         <button\n      //                             type=\"button\"\n      //                             class=\"btn btn-outline-primary btn-lg\"\n      //                             onClick={() => this.addItem(myProducts.id)}\n      //                         >\n      //                             {myProducts.productName}\n      //                         </button>\n      //                     </td>\n      //                     <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n      //             </tr>\n      //         ))}\n      //       </tbody>\n      //     </Table>\n      //   </div>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        className: \"productRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, products.map(myProducts => React.createElement(\"tr\", {\n        key: myProducts.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-primary btn-lg\",\n        onClick: () => this.addItem(myProducts.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, myProducts.productName)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"£ \" + JSON.parse(myProducts.price)))))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js"],"names":["React","Table","Button","LoadTable","GetProductList","Component","constructor","props","addToBasket","id","requestOptions","method","fetch","then","response","json","result","createItem","state","shoppingList","productList","firstRender","shoppingBasket","refreshTable","addItem","itemExists","setState","i","Object","keys","length","productId","product","e","console","log","getProductList","render","products","map","myProducts","productName","JSON","parse","price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\n//import { Grid, Cell } from \"styled-css-grid\";\n\nimport \"./css/GetProductList.css\";\nimport LoadTable from \"./LoadTable\";\n\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingList: [],\n      productList: [],\n      firstRender: true\n    };\n\n    const shoppingBasket = new LoadTable();\n    shoppingBasket.refreshTable = true;\n\n\n  }\n\n  addToBasket = id => {\n      const requestOptions = {\n          method: 'PUT'\n      };\n\n      fetch(\"http://localhost:9999/shop/addToBasket/\" + id, requestOptions).then((response) => {\n      return response.json();\n    }).then((result) => {\n        //this.getShoppingList();\n    });\n\n  }\n\n  createItem = id => {\n    const requestOptions = {\n      method: 'POST'\n    };\n  \n    fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then((response) => {\n      return response.json();\n    }).then((result) => {\n        //this.getShoppingList();\n    });\n  }\n\nasync addItem(id) {\n\n    var itemExists = false;\n\n    const response = await fetch(\"http://localhost:9999/shop/showBasket\");\n    const json = await response.json();\n    this.setState({ shoppingList: json });\n    //console.log(this.state.shoppingList);\n    //console.log(Object.keys(this.state.shoppingList).length);\n\n    for (var i = 0; i < Object.keys(this.state.shoppingList).length; i++ ) {\n        try {\n            var productId = this.state.shoppingList[i].product.id;\n            if (productId == id) {\n                itemExists = true;\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    if (itemExists == false) {\n        this.createItem(id);\n    }\n    else {\n        this.addToBasket(id);\n    }\n\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.setState({ productList: json });\n\n    // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.state.firstRender === true) {\n      this.getProductList();\n      this.state.firstRender = false;\n    }\n\n    return (\n    //     <div>\n    //     <Table striped bordered hover>\n    //         {/*\n    //       <thead>\n    //         <tr>\n    //           <th>Product Name</th>\n    //           <th>price</th>\n    //           <th></th>\n    //         </tr>\n    //       </thead>\n    //         */}\n    //       <tbody className=\"productRow\">\n    //         {products.map(myProducts => (\n    //             <tr key={myProducts.id} >\n    //                     <td>\n    //                         <button\n    //                             type=\"button\"\n    //                             class=\"btn btn-outline-primary btn-lg\"\n    //                             onClick={() => this.addItem(myProducts.id)}\n    //                         >\n    //                             {myProducts.productName}\n    //                         </button>\n    //                     </td>\n    //                     <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n    //             </tr>\n    //         ))}\n    //       </tbody>\n    //     </Table>\n    //   </div>\n\n        <div>\n        <Grid columns={2}>\n            {/*\n        <thead>\n            <tr>\n            <th>Product Name</th>\n            <th>price</th>\n            <th></th>\n            </tr>\n        </thead>\n            */}\n            <tbody className=\"productRow\">\n                {products.map(myProducts => (\n                    <tr key={myProducts.id} >\n                            <td>\n                                <button\n                                    type=\"button\"\n                                    class=\"btn btn-outline-primary btn-lg\"\n                                    onClick={() => this.addItem(myProducts.id)}\n                                >\n                                    {myProducts.productName}\n                                </button>\n                            </td>\n                            <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </Grid>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}