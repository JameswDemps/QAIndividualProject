{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js\";\nimport React from \"react\";\nimport { Table, Button } from \"react-bootstrap\"; //import { Grid, Cell } from \"styled-css-grid\";\n\nimport \"./css/GetProductList.css\";\nimport LoadTable from \"./LoadTable\";\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myFunc = () => {\n      this.props.changeHomeState(true);\n      console.log(\"Clicked\");\n    };\n\n    this.addToBasket = id => {\n      const requestOptions = {\n        method: 'PUT'\n      };\n      fetch(\"http://localhost:9999/shop/addToBasket/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {\n        this.myFunc; //this.getShoppingList();\n      });\n    };\n\n    this.createItem = id => {\n      const requestOptions = {\n        method: 'POST'\n      };\n      fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {//this.myFunc;\n        //this.getShoppingList();\n      });\n    };\n\n    this.state = {\n      shoppingList: [],\n      productList: [],\n      firstRender: true\n    };\n  }\n\n  async addItem(id) {\n    var itemExists = false;\n    const response = await fetch(\"http://localhost:9999/shop/showBasket\");\n    const json = await response.json();\n    this.setState({\n      shoppingList: json\n    }); //console.log(this.state.shoppingList);\n    //console.log(Object.keys(this.state.shoppingList).length);\n\n    for (var i = 0; i < Object.keys(this.state.shoppingList).length; i++) {\n      try {\n        var productId = this.state.shoppingList[i].product.id;\n\n        if (productId == id) {\n          itemExists = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (itemExists == false) {\n      this.createItem(id);\n    } else {\n      this.addToBasket(id);\n    }\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.setState({\n      productList: json\n    }); // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.state.firstRender === true) {\n      this.getProductList();\n      this.state.firstRender = false;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      className: \"productRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, products.map(myProducts => React.createElement(\"tr\", {\n      key: myProducts.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-primary btn-lg\",\n      onClick: () => this.addItem(myProducts.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, myProducts.productName)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"£ \" + JSON.parse(myProducts.price)))))), React.createElement(\"button\", {\n      onClick: this.myFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"My Button\")) // <div>\n    // <Grid columns={2}>\n    //     {/*\n    // <thead>\n    //     <tr>\n    //     <th>Product Name</th>\n    //     <th>price</th>\n    //     <th></th>\n    //     </tr>\n    // </thead>\n    //     */}\n    //     <tbody className=\"productRow\">\n    //         {products.map(myProducts => (\n    //             <tr key={myProducts.id} >\n    //                     <td>\n    //                         <button\n    //                             type=\"button\"\n    //                             class=\"btn btn-outline-primary btn-lg\"\n    //                             onClick={() => this.addItem(myProducts.id)}\n    //                         >\n    //                             {myProducts.productName}\n    //                         </button>\n    //                     </td>\n    //                     <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n    //             </tr>\n    //         ))}\n    //     </tbody>\n    // </Grid>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js"],"names":["React","Table","Button","LoadTable","GetProductList","Component","constructor","props","myFunc","changeHomeState","console","log","addToBasket","id","requestOptions","method","fetch","then","response","json","result","createItem","state","shoppingList","productList","firstRender","addItem","itemExists","setState","i","Object","keys","length","productId","product","e","getProductList","render","products","map","myProducts","productName","JSON","parse","price"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\n//import { Grid, Cell } from \"styled-css-grid\";\n\nimport \"./css/GetProductList.css\";\nimport LoadTable from \"./LoadTable\";\n\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingList: [],\n      productList: [],\n      firstRender: true\n    };\n\n  }\n\n  myFunc = () => {\n    this.props.changeHomeState(true);\n    console.log(\"Clicked\");\n  }\n\n  addToBasket = id => {\n      const requestOptions = {\n          method: 'PUT'\n      };\n\n      fetch(\"http://localhost:9999/shop/addToBasket/\" + id, requestOptions).then((response) => {\n      return response.json();\n    }).then((result) => {\n        this.myFunc;\n        //this.getShoppingList();\n    });\n\n  }\n\n  createItem = id => {\n    const requestOptions = {\n      method: 'POST'\n    };\n  \n    fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then((response) => {\n      return response.json();\n    }).then((result) => {\n        //this.myFunc;\n        //this.getShoppingList();\n    });\n  }\n\nasync addItem(id) {\n\n    var itemExists = false;\n\n    const response = await fetch(\"http://localhost:9999/shop/showBasket\");\n    const json = await response.json();\n    this.setState({ shoppingList: json });\n    //console.log(this.state.shoppingList);\n    //console.log(Object.keys(this.state.shoppingList).length);\n\n    for (var i = 0; i < Object.keys(this.state.shoppingList).length; i++ ) {\n        try {\n            var productId = this.state.shoppingList[i].product.id;\n            if (productId == id) {\n                itemExists = true;\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    if (itemExists == false) {\n        this.createItem(id);\n    }\n    else {\n        this.addToBasket(id);\n    }\n\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.setState({ productList: json });\n\n    // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.state.firstRender === true) {\n      this.getProductList();\n      this.state.firstRender = false;\n    }\n\n    return (\n        <div>\n        <Table striped bordered hover>\n            {/*\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>price</th>\n              <th></th>\n            </tr>\n          </thead>\n            */}\n          <tbody className=\"productRow\">\n            {products.map(myProducts => (\n                <tr key={myProducts.id} >\n                        <td>\n                            <button\n                                type=\"button\"\n                                class=\"btn btn-outline-primary btn-lg\"\n                                onClick={() => this.addItem(myProducts.id)}\n                            >\n                                {myProducts.productName}\n                            </button>\n                        </td>\n                        <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n                </tr>\n            ))}\n          </tbody>\n        </Table>\n        <button onClick={this.myFunc}>My Button</button>\n      </div>\n\n        // <div>\n        // <Grid columns={2}>\n        //     {/*\n        // <thead>\n        //     <tr>\n        //     <th>Product Name</th>\n        //     <th>price</th>\n        //     <th></th>\n        //     </tr>\n        // </thead>\n        //     */}\n        //     <tbody className=\"productRow\">\n        //         {products.map(myProducts => (\n        //             <tr key={myProducts.id} >\n        //                     <td>\n        //                         <button\n        //                             type=\"button\"\n        //                             class=\"btn btn-outline-primary btn-lg\"\n        //                             onClick={() => this.addItem(myProducts.id)}\n        //                         >\n        //                             {myProducts.productName}\n        //                         </button>\n        //                     </td>\n        //                     <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n        //             </tr>\n        //         ))}\n        //     </tbody>\n        // </Grid>\n        // </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}