{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js\";\nimport React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nimport \"./css/GetProductList.css\";\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createItem = id => {\n      const requestOptions = {\n        method: 'POST'\n      }; // Note: I'm using arrow functions inside the `.fetch()` method.\n      // This makes it so you don't have to bind component functions like `setState`\n      // to the component.\n\n      fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {//this.getShoppingList();\n      });\n    };\n\n    this.addItem = id => {\n      this.createItem(id);\n    };\n\n    this.state = {\n      productList: [],\n      firstRender: true\n    };\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.setState({\n      productList: json\n    }); // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.state.firstRender === true) {\n      this.getProductList();\n      this.state.firstRender = false;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, products.map(myProducts => React.createElement(\"tr\", {\n      key: myProducts.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-primary btn-lg\",\n      onClick: () => this.addItem(myProducts.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, myProducts.productName)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, myProducts.price))))));\n  }\n\n}","map":{"version":3,"sources":["/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js"],"names":["React","Table","Button","GetProductList","Component","constructor","props","createItem","id","requestOptions","method","fetch","then","response","json","result","addItem","state","productList","firstRender","getProductList","setState","render","products","map","myProducts","productName","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AAEA,OAAO,0BAAP;AAEA,eAAe,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQNC,EAAE,IAAI;AACjB,YAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE;AADa,OAAvB,CADiB,CAKjB;AACA;AACA;;AACAC,MAAAA,KAAK,CAAC,8CAA8CH,EAA/C,EAAmDC,cAAnD,CAAL,CAAwEG,IAAxE,CAA8EC,QAAD,IAAc;AACzF,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAFD,EAEGF,IAFH,CAESG,MAAD,IAAY,CAChB;AACH,OAJD;AAKD,KArBkB;;AAAA,SAuBnBC,OAvBmB,GAuBTR,EAAE,IAAI;AACd,WAAKD,UAAL,CAAgBC,EAAhB;AACD,KAzBkB;;AAEjB,SAAKS,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAqBD,QAAMC,cAAN,GAAuB;AACrB,UAAMP,QAAQ,GAAG,MAAMF,KAAK,CAAC,yCAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAT,EAAnB;AACA,SAAKO,QAAL,CAAc;AAAEH,MAAAA,WAAW,EAAEJ;AAAf,KAAd,EAHqB,CAKrB;AACA;AACA;AACA;AACA;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWC,WAA1B;;AAEA,QAAI,KAAKD,KAAL,CAAWE,WAAX,KAA2B,IAA/B,EAAqC;AACnC,WAAKC,cAAL;AACA,WAAKH,KAAL,CAAWE,WAAX,GAAyB,KAAzB;AACD;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,QAAQ,CAACC,GAAT,CAAaC,UAAU,IACtB;AAAI,MAAA,GAAG,EAAEA,UAAU,CAACjB,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC,gCAFV;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKQ,OAAL,CAAaS,UAAU,CAACjB,EAAxB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKiB,UAAU,CAACC,WALhB,CADJ,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,UAAU,CAACE,KAAhB,CAVF,CADD,CADH,CAVF,CADA,CADJ;AA+BD;;AA/EyD","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\nimport \"./css/GetProductList.css\";\n\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productList: [],\n      firstRender: true\n    };\n  }\n\n  createItem = id => {\n    const requestOptions = {\n      method: 'POST'\n    };\n  \n    // Note: I'm using arrow functions inside the `.fetch()` method.\n    // This makes it so you don't have to bind component functions like `setState`\n    // to the component.\n    fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then((response) => {\n      return response.json();\n    }).then((result) => {\n        //this.getShoppingList();\n    });\n  }\n\n  addItem = id => {\n    this.createItem(id);\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.setState({ productList: json });\n\n    // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.state.firstRender === true) {\n      this.getProductList();\n      this.state.firstRender = false;\n    }\n\n    return (\n        <div>\n        <Table striped bordered hover>\n            {/*\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>price</th>\n              <th></th>\n            </tr>\n          </thead>\n            */}\n          <tbody>\n            {products.map(myProducts => (\n              <tr key={myProducts.id}>\n                <td>\n                    <button\n                        type=\"button\"\n                        class=\"btn btn-outline-primary btn-lg\"\n                        onClick={() => this.addItem(myProducts.id)}\n                    >\n                        {myProducts.productName}\n                    </button>\n                </td>\n                <td>{myProducts.price}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}