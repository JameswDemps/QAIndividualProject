{"ast":null,"code":"var _jsxFileName = \"/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js\";\nimport React from \"react\";\nimport { Table, Button } from \"react-bootstrap\"; //import { Grid, Cell } from \"styled-css-grid\";\n\nimport \"./css/GetProductList.css\";\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myFunc2 = () => {\n      this.props.changeSearchState(false); //console.log(\"Clicked\");\n    };\n\n    this.myFunc = () => {\n      this.props.changeHomeState(true); //console.log(\"Clicked\");\n    };\n\n    this.addToBasket = id => {\n      const requestOptions = {\n        method: \"PUT\"\n      };\n      fetch(\"http://localhost:9999/shop/addToBasket/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {\n        this.myFunc(); //this.getShoppingList();\n      });\n    };\n\n    this.createItem = id => {\n      const requestOptions = {\n        method: \"POST\"\n      };\n      fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions).then(response => {\n        return response.json();\n      }).then(result => {\n        this.myFunc(); //this.getShoppingList();\n      });\n    };\n\n    this.state = {\n      shoppingList: [],\n      productList: [],\n      firstRender: true\n    };\n  }\n\n  async addItem(id) {\n    var itemExists = false;\n    const response = await fetch(\"http://localhost:9999/shop/showBasket\");\n    const json = await response.json();\n    this.state.shoppingList = json; //console.log(this.state.shoppingList);\n    //console.log(Object.keys(this.state.shoppingList).length);\n\n    for (var i = 0; i < Object.keys(this.state.shoppingList).length; i++) {\n      try {\n        var productId = this.state.shoppingList[i].product.id;\n\n        if (productId == id) {\n          itemExists = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (itemExists == false) {\n      this.createItem(id);\n    } else {\n      this.addToBasket(id);\n    }\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.state.productList = json; // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.props.updateSearch === true) {\n      this.getProductList();\n      this.myFunc2(); //this.state.firstRender = false;\n    }\n\n    return React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      className: \"productRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, products.map(myProducts => {\n      // console.log(\"Yo\");\n      // console.log(this.props.searchValue);\n      if (this.props.searchValue == '' || myProducts.productName.toLowerCase().includes(this.props.searchValue.toLowerCase())) {\n        return React.createElement(\"tr\", {\n          key: myProducts.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-primary btn-lg\",\n          onClick: () => this.addItem(myProducts.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, myProducts.productName)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"£ \" + JSON.parse(myProducts.price).toFixed(2)));\n      }\n    }))) // <div>\n    // <Grid columns={2}>\n    //     {/*\n    // <thead>\n    //     <tr>\n    //     <th>Product Name</th>\n    //     <th>price</th>\n    //     <th></th>\n    //     </tr>\n    // </thead>\n    //     */}\n    //     <tbody className=\"productRow\">\n    //         {products.map(myProducts => (\n    //             <tr key={myProducts.id} >\n    //                     <td>\n    //                         <button\n    //                             type=\"button\"\n    //                             class=\"btn btn-outline-primary btn-lg\"\n    //                             onClick={() => this.addItem(myProducts.id)}\n    //                         >\n    //                             {myProducts.productName}\n    //                         </button>\n    //                     </td>\n    //                     <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n    //             </tr>\n    //         ))}\n    //     </tbody>\n    // </Grid>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/administrator/Documents/QAIndividualProject/shop_nation_frontend/src/components/GetProductList.js"],"names":["React","Table","Button","GetProductList","Component","constructor","props","myFunc2","changeSearchState","myFunc","changeHomeState","addToBasket","id","requestOptions","method","fetch","then","response","json","result","createItem","state","shoppingList","productList","firstRender","addItem","itemExists","i","Object","keys","length","productId","product","e","console","log","getProductList","render","products","updateSearch","map","myProducts","searchValue","productName","toLowerCase","includes","JSON","parse","price","toFixed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\n//import { Grid, Cell } from \"styled-css-grid\";\n\nimport \"./css/GetProductList.css\";\n\nexport default class GetProductList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shoppingList: [],\n      productList: [],\n      firstRender: true\n    };\n  }\n\n  myFunc2 = () => {\n    this.props.changeSearchState(false);\n    //console.log(\"Clicked\");\n  };\n\n  myFunc = () => {\n    this.props.changeHomeState(true);\n    //console.log(\"Clicked\");\n  };\n\n  addToBasket = id => {\n    const requestOptions = {\n      method: \"PUT\"\n    };\n\n    fetch(\"http://localhost:9999/shop/addToBasket/\" + id, requestOptions)\n      .then(response => {\n        return response.json();\n      })\n      .then(result => {\n        this.myFunc();\n        //this.getShoppingList();\n      });\n  };\n\n  createItem = id => {\n    const requestOptions = {\n      method: \"POST\"\n    };\n\n    fetch(\"http://localhost:9999/shop/createNewItem/\" + id, requestOptions)\n      .then(response => {\n        return response.json();\n      })\n      .then(result => {\n        this.myFunc();\n        //this.getShoppingList();\n      });\n  };\n\n  async addItem(id) {\n    var itemExists = false;\n\n    const response = await fetch(\"http://localhost:9999/shop/showBasket\");\n    const json = await response.json();\n    this.state.shoppingList = json;\n    //console.log(this.state.shoppingList);\n    //console.log(Object.keys(this.state.shoppingList).length);\n\n    for (var i = 0; i < Object.keys(this.state.shoppingList).length; i++) {\n      try {\n        var productId = this.state.shoppingList[i].product.id;\n        if (productId == id) {\n          itemExists = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (itemExists == false) {\n      this.createItem(id);\n    } else {\n      this.addToBasket(id);\n    }\n  }\n\n  async getProductList() {\n    const response = await fetch(\"http://localhost:9999/shop/showProducts\");\n    const json = await response.json();\n    this.state.productList = json;\n\n    // fetch(\"/shop/showBasket\")\n    // .then(response =>  response.json())\n    // .then(data => this.setState({\n    //     shoppingList : data}))\n    // .then(data => console.log(this.state.shoppingList)\n  }\n\n  render() {\n    let products = this.state.productList;\n\n    if (this.props.updateSearch === true) {\n      this.getProductList();\n      this.myFunc2();\n      //this.state.firstRender = false;\n    }\n\n    return (\n        <Table striped bordered hover>\n          {/*\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>price</th>\n              <th></th>\n            </tr>\n          </thead>\n            */}\n          <tbody className=\"productRow\">\n            {products.map(myProducts => {\n              // console.log(\"Yo\");\n              // console.log(this.props.searchValue);\n              if (this.props.searchValue == '' ||  myProducts.productName.toLowerCase().includes(this.props.searchValue.toLowerCase())) {\n                return (\n                  <tr key={myProducts.id}>\n                    <td>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-outline-primary btn-lg\"\n                        onClick={() => this.addItem(myProducts.id)}\n                      >\n                        {myProducts.productName}\n                      </button>\n                    </td>\n                    <td>{\"£ \" + JSON.parse(myProducts.price).toFixed(2)}</td>\n                  </tr>\n                );\n              }\n            })}\n          </tbody>\n          {/* <button onClick={this.myFunc}>My Button</button> */}\n        </Table>\n\n      // <div>\n      // <Grid columns={2}>\n      //     {/*\n      // <thead>\n      //     <tr>\n      //     <th>Product Name</th>\n      //     <th>price</th>\n      //     <th></th>\n      //     </tr>\n      // </thead>\n      //     */}\n      //     <tbody className=\"productRow\">\n      //         {products.map(myProducts => (\n      //             <tr key={myProducts.id} >\n      //                     <td>\n      //                         <button\n      //                             type=\"button\"\n      //                             class=\"btn btn-outline-primary btn-lg\"\n      //                             onClick={() => this.addItem(myProducts.id)}\n      //                         >\n      //                             {myProducts.productName}\n      //                         </button>\n      //                     </td>\n      //                     <td>{\"£ \" + JSON.parse(myProducts.price)}</td>\n      //             </tr>\n      //         ))}\n      //     </tbody>\n      // </Grid>\n      // </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}